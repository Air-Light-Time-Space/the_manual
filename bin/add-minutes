#!/bin/bash

# Check for required date argument
if [ -z "$1" ]; then
  echo "Usage: $0 YYYY-MM-DD [--board]"
  exit 1
fi

# Parse arguments
DATE=$1
BOARD_FLAG=false
if [ "$2" == "--board" ]; then
  BOARD_FLAG=true
fi

# Set output file name based on the flag
if $BOARD_FLAG; then
  MEETING_TYPE="Board_Meeting"
  MEETING_TITLE="Board Meeting"
else
  MEETING_TYPE="Member_Meeting"
  MEETING_TITLE="Member's Meeting"
fi

OUTPUT_FILE="src/minutes/${DATE}-${MEETING_TYPE}.md"

# Template file path
TEMPLATE_FILE="Member_Meeting.template"

README_FILE="src/minutes/README.md"
SUMMARY_FILE="src/SUMMARY.md"

# Check if template file exists
if [ ! -f "$TEMPLATE_FILE" ]; then
  echo "Template file $TEMPLATE_FILE not found!"
  exit 1
fi

# Replace YYYY-MM-DD with the actual date and write to the output file using awk
awk -v date="$DATE" -v title="$MEETING_TITLE" "{ \
    gsub(/YYYY-MM-DD/, date); \
    gsub(/Member's Meeting/, title); \
} 1" "$TEMPLATE_FILE" > "$OUTPUT_FILE"

# Notify user of the generated file and README update
echo "Generated meeting minutes: $OUTPUT_FILE"
echo "⚠️ remember to update ${README_FILE} and ${SUMMARY_FILE} with the new link."
